# This is a composition of lint and test scripts
# Make sure to update this file along with the others

name: Test and Release

# Only run this on tagged versions
on:
  push:
    tags:
      - 'v*'

jobs:
  # Performs quick checks before the expensive test runs
  check-and-lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm ci
    - name: Perform a type check
      run: npm run check
      env:
        CI: true
    - name: Lint TypeScript code
      run: npm run lint
    - name: Lint config files
      run: npm run lint:config
  
  # Runs unit tests on all supported node versions
  unit-tests:
    runs-on: ubuntu-latest

    needs: check-and-lint

    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm ci
    - name: Run component tests
      run: npm run test:ts
      env:
        CI: true
    # TODO: Find out how this works together with coveralls
    # - name: Generate and upload coverage report
    #   if: matrix.node-version == 12.x
    #   run: |
    #     npm run coverage

  # Deploys the final package to NPM
  deploy:
    runs-on: ubuntu-latest

    needs: [unit-tests]

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm ci
    - name: Create a clean build
      run: npm run build
    - name: Publish package to npm
      run: |
        npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
        npm whoami
        npm publish
